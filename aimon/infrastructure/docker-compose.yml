version: '3.8'

services:
  # Message Queue - RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: aimon-rabbitmq
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: aimon
      RABBITMQ_DEFAULT_PASS: aimon123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - aimon-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Gateway - Traefik
  traefik:
    image: traefik:v3.0
    container_name: aimon-gateway
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"    # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/certs
    networks:
      - aimon-network

  # Service Discovery - Consul
  consul:
    image: consul:1.17
    container_name: aimon-consul
    ports:
      - "8500:8500"    # HTTP API & UI
      - "8600:8600"    # DNS
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    volumes:
      - consul_data:/consul/data
    networks:
      - aimon-network
    environment:
      CONSUL_BIND_INTERFACE: eth0

  # Configuration Center - Vault (optional, for secure config)
  vault:
    image: vault:1.15
    container_name: aimon-vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: aimon-dev-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
    networks:
      - aimon-network

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: aimon-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - aimon-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:10.2.2
    container_name: aimon-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: aimon123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - aimon-network

  # Logging - Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: aimon-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - aimon-network

  # Logging - Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: aimon-kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - aimon-network

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: aimon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aimon-network
    command: redis-server --appendonly yes

volumes:
  rabbitmq_data:
  consul_data:
  vault_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
  redis_data:
  traefik_certs:

networks:
  aimon-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16